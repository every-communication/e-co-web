{
	"root": true,
	"env": {
		"browser": true,
		"es2020": true
	},
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended-type-checked",
		"plugin:react-hooks/recommended",
		"eslint-config-prettier",
		"plugin:import/recommended",
		"plugin:jsx-a11y/recommended",
		"plugin:react/recommended",
		"plugin:react/jsx-runtime",
		"prettier"
	],
	"parser": "@typescript-eslint/parser",
	"plugins": [
		"react-refresh",
		"import",
		"jsx-a11y",
		"react",
		"react-hooks",
		"@typescript-eslint",
		"prettier",
		"eslint-plugin-prettier"
	],
	"rules": {
		"@typescript-eslint/unbound-method": "off",
		"@typescript-eslint/no-floating-promises": "off",
		"@typescript-eslint/no-misused-promises": "off",
		"@typescript-eslint/no-unsafe-argument": "off",
		"@typescript-eslint/no-redundant-type-constituents": "off",
		"react/prop-types": "off",
		"import/no-unresolved": "off",
		"prettier/prettier": ["error", { "endOfLine": "auto", "printWidth": 120 }],
		"no-implicit-coercion": "error",
		"react-refresh/only-export-components": "off",
		"@typescript-eslint/no-unsafe-assignment": "off",
		"@typescript-eslint/no-unsafe-member-access": "off",
		"@typescript-eslint/no-unsafe-call": "off",
		"@typescript-eslint/no-unsafe-return": "off",
		"@typescript-eslint/ban-ts-comment": "error",
		"@typescript-eslint/ban-types": "off",
		"no-array-constructor": "off",
		"getter-return": "warn",
		"@typescript-eslint/no-array-constructor": "error",
		"@typescript-eslint/no-duplicate-enum-values": "error",
		"@typescript-eslint/no-explicit-any": "error",
		"@typescript-eslint/no-extra-non-null-assertion": "error",
		"no-loss-of-precision": "off",
		"@typescript-eslint/no-loss-of-precision": "error",
		"@typescript-eslint/no-misused-new": "error",
		"@typescript-eslint/no-namespace": "error",
		"@typescript-eslint/no-non-null-asserted-optional-chain": "error",
		"@typescript-eslint/no-this-alias": "error",
		"@typescript-eslint/no-unnecessary-type-constraint": "error",
		"@typescript-eslint/no-unsafe-declaration-merging": "error",
		"no-unused-vars": "off",
		"@typescript-eslint/no-unused-vars": [
			"warn",
			{
				"ignoreRestSiblings": true
			}
		],
		"@typescript-eslint/no-var-requires": "error",
		"@typescript-eslint/prefer-as-const": "error",
		"@typescript-eslint/triple-slash-reference": "error",
		"no-async-promise-executor": "warn",
		"@typescript-eslint/no-inferrable-types": "warn",
		"@typescript-eslint/naming-convention": [
			"error",
			{
				"format": ["camelCase", "UPPER_CASE", "PascalCase"],
				"selector": "variable",
				"leadingUnderscore": "allow"
			},
			{
				"format": ["camelCase", "PascalCase"],
				"selector": "function"
			},
			{
				"format": ["PascalCase"],
				"selector": "interface"
			},
			{
				"format": ["PascalCase"],
				"selector": "typeAlias"
			}
		],
		"@typescript-eslint/explicit-module-boundary-types": "off",
		"@typescript-eslint/array-type": [
			"error",
			{
				"default": "array-simple"
			}
		],
		"@typescript-eslint/member-ordering": [
			"error",
			{
				"default": [
					"public-static-field",
					"private-static-field",
					"public-instance-field",
					"private-instance-field",
					"public-constructor",
					"private-constructor",
					"public-instance-method",
					"private-instance-method"
				]
			}
		],
		"no-restricted-imports": [
			"error",
			{
				"paths": [
					{
						"name": "util",
						"importNames": ["isArray"],
						"message": "`Array.isArray`를 대신 사용해주세요!"
					}
				]
			}
		],
		"import/order": [
			"error",
			{
				"newlines-between": "always",
				"groups": [["builtin", "external"], ["type", "internal", "object"], ["parent", "sibling", "index"], "unknown"],
				"pathGroups": [
					{
						"pattern": "react*",
						"group": "external",
						"position": "before"
					},
					{
						"pattern": "@/**",
						"group": "internal"
					},
					{
						"pattern": "{public/**/*, public/*}",
						"group": "internal",
						"position": "after"
					},
					{
						"pattern": "{./*.module.scss,../**/*.module.scss,./*.scss,../**/*.scss}",
						"group": "unknown"
					}
				],
				"pathGroupsExcludedImportTypes": ["@/**", "src/**", "public/**"],
				"alphabetize": {
					"order": "asc",
					"caseInsensitive": true
				}
			}
		],
		"jsx-a11y/label-has-associated-control": [
			"error",
			{
				"labelComponents": ["label"],
				"labelAttributes": ["htmlFor"],
				"controlComponents": ["input"]
			}
		],
		"prefer-const": "error",
		"no-var": "error",
		"eqeqeq": [
			"error",
			"always",
			{
				"null": "ignore"
			}
		],
		"import/no-duplicates": "error",
		"react-hooks/rules-of-hooks": "error",
		"react-hooks/exhaustive-deps": "error",
		"react/jsx-no-target-blank": "error",
		"sort-imports": [
			"error",
			{
				"ignoreCase": true,
				"ignoreDeclarationSort": true,
				"ignoreMemberSort": false,
				"allowSeparatedGroups": true
			}
		]
	},
	"settings": {
		"react": {
			"version": "detect"
		},
		"import/resolver": {
			"typescript": {}
		}
	},
	"parserOptions": {
		"ecmaVersion": "latest",
		"sourceType": "module",
		"project": ["./tsconfig.json"]
	}
}
